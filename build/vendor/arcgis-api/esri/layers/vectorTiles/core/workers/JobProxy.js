//>>built
define("esri/layers/vectorTiles/core/workers/JobProxy","require exports dojo/_base/kernel dojo/_base/url dojo/Deferred ../../kernel ../../config ../../request ../Logger ../urlUtils ./WorkerFallbackImpl".split(" "),function(r,D,v,w,s,x,g,y,z,k,p){function A(){if(!B){var b=void 0;try{b=new Worker(l)}catch(c){m.warn("Failed to create Worker. Fallback to execute module in main thread",event),b=new p}return t(b)}q||(b=new w(l),g.defaults?g.defaults.io.corsEnabledServers.push(b.host):g.request.corsEnabledServers.push(b.host),
q=y(l,{responseType:"text"}));return q.then(function(c){var b;try{b=new Worker(URL.createObjectURL(new Blob([c.data],{type:"text/javascript"})))}catch(a){m.warn("Failed to create Worker. Fallback to execute module in main thread",a),b=new p}return t(b)})}function t(b){function c(a){if(a&&a.data&&a.data.type)if(a=a.data.type,"\x3cworker-loaded\x3e"===a){a=b;var d=JSON.parse(JSON.stringify(g));a.postMessage({type:"\x3cconfigure\x3e",configure:{esriConfig:d,dojoConfig:{async:!0,baseUrl:C,locale:v.locale,
has:{"esri-cors":1,"dojo-test-sniff":0,"config-deferredInstrumentation":0},paths:{esri:"esri",dojo:"dojo",dojox:"dojox",dstore:"dstore",moment:"moment"}},loaderUrl:u}})}else"\x3cworker-configured\x3e"===a&&(b.removeEventListener("message",c),b.removeEventListener("error",n),e.resolve(b))}function n(a){a.preventDefault();b.removeEventListener("message",c);b.removeEventListener("error",n);m.warn("Failed to create Worker. Fallback to execute module in main thread",a);b=new p;b.addEventListener("message",
c);b.addEventListener("error",n)}var e=new s;b.addEventListener("message",c);b.addEventListener("error",n);return e.promise}var m=z.getLogger("esri.core.workers"),l=k.makeAbsolute(r.toUrl("./worker.js")),u=k.makeAbsolute(r.toUrl("./worker-init.js")),C=k.makeAbsolute("../../../../../../",u)+"/",B=!k.hasSameOrigin(l,location.href),q=null;return function(){function b(c,b,e){var a=this;this.connections=c;this.index=b;this.workerInitCallback=e;this.msgCount=0;this.outgoingJobs={};this.incomingJobs={};
this.incomingStaticJobs={};A().then(function(c){a.worker=c;a.worker.addEventListener("message",a.message.bind(a));a.worker.addEventListener("error",function(a){a.preventDefault();m.error(a)});a.workerInitCallback(a.index)})}b.prototype.terminate=function(){this.worker.terminate()};b.prototype.openConnection=function(c,b){return this.invoke("\x3copen-connection\x3e",{path:c},void 0,b)};b.prototype.closeConnection=function(c){this.invoke("\x3cclose-connection\x3e",void 0,void 0,c)};b.prototype.invoke=
function(c,b,e,a){var d=this,f=++this.msgCount,h=new s(function(c){d.worker.postMessage({type:"\x3ccancel\x3e",id:f,connection:a,data:{reason:c}});d.outgoingJobs[f]&&delete d.outgoingJobs[f]});this.outgoingJobs[f]=h;this.worker.postMessage({type:c,id:f,connection:a,data:b},e);return h.promise};b.prototype.message=function(c){var b=this;if(c&&c.data){var e=c.data.type;if(e){var a=c.data,d=c.data.id;if("\x3cresponse\x3e"===e&&d){if(c=this.outgoingJobs[d])delete this.outgoingJobs[d],a.error?c.reject(a.error):
c.resolve(a.data)}else if("\x3ccancel\x3e"===e&&d)(c=this.incomingJobs[d])&&c.cancel(a.data.reason),a.staticMsg&&(c=this.incomingStaticJobs[d])&&c.cancel(a.data.reason);else if("\x3cstatic-message\x3e"===e){var f=a.staticMsg;c=x.workerMessages[f];!c||"function"!==typeof c?this.worker.postMessage({type:"\x3cstatic-message\x3e",staticMsg:f,id:d,error:c+" message type is not available on the kernel!"}):(a=c.call(this,a.data),this.incomingStaticJobs[d]=a,a.then(function(a){b.worker.postMessage({type:"\x3cstatic-message\x3e",
staticMsg:f,id:d,data:a.data},a.buffers)}).otherwise(function(a){a||(a="Error encountered at method"+f);(!a.dojoType||"cancel"!==a.dojoType)&&b.worker.postMessage({type:"\x3cstatic-message\x3e",staticMsg:f,id:d,error:a})}).always(function(){delete b.incomingStaticJobs[d]}))}else{var h=a.connection;if(c=this.connections[h])if(c=c.client){var g=c[e];"function"===typeof g&&(a=g.call(c,a.data),this.incomingJobs[d]=a,a.then(function(a){b.worker.postMessage({type:"\x3cresponse\x3e",id:d,connection:h,error:a.error,
data:a.data},a.buffers)}).otherwise(function(a){a||(a="Error encountered at method"+e);(!a.dojoType||"cancel"!==a.dojoType)&&b.worker.postMessage({type:"\x3cresponse\x3e",id:d,connection:h,error:a})}).always(function(){delete b.incomingJobs[d]}))}}}}};return b}()});